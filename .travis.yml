env:
  global:
    - TERM=dumb
    #- secure: "Mc+HCf8MmK28kZwaZ7YZox9qAlCP81pLLQVQMCH9yxCwFBUJlxO0+jsimoMhe6K9hi0WE1pS6Qa6+v0GdZ0+FmIlX1sQh5X64NCjCZHY3lcnFoPI8FSspgp0jRNd0Y1DPBWeLsuM2kmw9oaeQ8kqR7RYXLvkEHYfqbip1RkPRzfTJnB9OCdxWGfPrahD5idRyx2dfhw176vGF8h5aeTaajNvLhBGae2OerbEO0S4tf0jGUTVOJSPCJo2tcaCFIUcS+4fgNkqace4vtY7ZgJUstPpG6Ajj5lHFhfjEQrXlsn5Wv5eflvrO8XkXPGGC9Ttbqx/+zOwPxbjlneDEP6QyEfduxOzvLWM6TV8spNbI9z+X+dkRMovl5zgZrY9PzsM/cBcg3GS3rMUVrCHuJWNxcsX6oihKg4Dso8LZrvQXpmG4Ucgq4vbF+pzRI2frzuwW4SoddiKfz2cGrihkso0+nnuWe1a7NzjJzVR1oq6yA5GV4WWFIJT56OJ8Ta4y4dAKbgIhg7YFHfahfvc62B5BElxa9TtBIkud1sLDN2l6VEhso2sFpywQxbNXfLTV7GA4NIGAUPLf4qzBNE1kNkjaX6sdfY6MvzCyfWmui+KgZxRSZeUJ2bboP/0l0vuuDzLUlUUeqom8aGJfuQbXnGhld1vzqtvmc2DSLIEJ1v8V6c="
notifications:
  email: false
git:
  quiet: true
  depth: false
jdk: openjdk11
node_js: lts/*
python: 3.7
services:
  - docker
os: linux
arch: amd64
addons:
  apt:
    update: true
    packages:
      - python3-pip
install: true
before_install:
  - |
    if [ ! -f ${HOME}/.local/daggerok/bash-functions/master/main.bash ] ; then
      mkdir -p ${HOME}/.local/daggerok/bash-functions/master ;
      curl -s https://raw.githubusercontent.com/daggerok/bash-functions/master/main.bash > ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
    fi
    source ${HOME}/.local/daggerok/bash-functions/master/main.bash ;
  - stop_any 80 5432 8080 8001 8002 8003 8004
  #
  - export PATH=$HOME/.local/bin:$PATH
  - pip3 install --user --upgrade pip setuptools
  - pip install --user --upgrade docker-compose httpie
jobs:
  include:
    - stage: test
      name: ingress
      script:
        - cd $TRAVIS_BUILD_DIR
        #- wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
        - curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
        - k3d create --name k3s --api-port 6551 --publish 80:80 --workers 3
        - sleep 30s
        - export KUBECONFIG="$(k3d get-kubeconfig --name='k3s')"
        #
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - mv ./kubectl ~/.local/bin/
        - kubectl cluster-info
        - kubectl get pods --all-namespaces -o wide --watch &
        #
        - echo 'https://kubernetes.github.io/ingress-nginx/deploy/#prerequisite-generic-deployment-command'
        - kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml
        - echo 'https://kubernetes.github.io/ingress-nginx/deploy/#bare-metal'
        - kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/provider/baremetal/service-nodeport.yaml
        - sleep 120s
        #
        - kubectl apply -f k8s/
        - sleep 180s
        - kubectl get all -o wide
        - http :/actuator/health
        - http :/find-all-greetings
        #
        - kubectl delete -f k8s/                    || echo 'oops, kubectl failed.'
        - k3d stop --name=k3s                       || echo 'oops, k3d failed.'
        - docker rm -f -v `docker ps -a -q`         || echo 'oops, docker failed.'
        - cat ~/.config/k3d/k3s/kubeconfig.yaml     || echo 'oops, cat failed.'
        - rm -rf ~/.config/k3d/k3s/kubeconfig.yaml  || echo 'oops, rm failed.'
    - stage: test
      name: jib + k8s, k3s, k3d...
      script:
        - cd $TRAVIS_BUILD_DIR
        #- wget -q -O - https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
        - curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash
        - k3d create --name k3s --api-port 6551 --publish 30004:30004 --workers 2
        - sleep 30s
        - export KUBECONFIG="$(k3d get-kubeconfig --name='k3s')"
        #
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - mv ./kubectl ~/.local/bin/
        - kubectl cluster-info
        - kubectl get pods --all-namespaces -o wide --watch &
        #
        #- curl -Lo skaffold https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64
        #- chmod +x skaffold
        #- mv skaffold ~/.local/bin/
        #- ./mvnw clean compile jib:dockerBuild
        #- skaffold --images daggerok/boot-skaffold
        #- skaffold dev &
        #
        - kubectl apply -f k8s/hello-variants-service.yaml -f k8s/greeting-service.yaml -f k8s/frontend.yaml
        - sleep 180s
        - http :30004/actuator/health
        - http :30004/find-all-greetings
        #
        - kubectl delete -f k8s/                    || echo 'oops, kubectl failed...'
        - k3d stop --name=k3s                       || echo 'oops, k3d failed...'
        - docker rm -f -v `docker ps -a -q`         || echo 'oops, docker failed...'
        - cat ~/.config/k3d/k3s/kubeconfig.yaml     || echo 'oops, cat failed...'
        - rm -rf ~/.config/k3d/k3s/kubeconfig.yaml  || echo 'oops, rm failed...'
    - stage: test
      name: jib + dkanejs
      before_script:
        - ./mvnw clean package jib:dockerBuild
        - ./mvnw -f docker-compose -Pup
        - wait_for 8001 8002 8003 8004
        - sleep 30s
      script:
        - http :8001/actuator/info
        - http :8001/info
        - http :8001/find-all-hello
        #
        - http :8003/actuator/info
        - http :8003/info
        - http :8003/find-all-greetings
        - http :8003/find-all-greetings/max
        #
        - http :8004/actuator/info
        - http :8004/info
        - http :8004/find-all-hello
        - http :8004/find-all-greetings
        - http :8004/find-all-greetings/maksimko
      after_script:
        - ./mvnw -f docker-compose -Pdown
    - stage: test
      name: jib + fabric8
      before_script:
        - ./mvnw clean package jib:dockerBuild
        - ./mvnw -f docker-compose -Pstart
      script:
        - http :8001/actuator/info
        - http :8001/info
        - http :8001/find-all-hello
        #
        - http :8003/actuator/info
        - http :8003/info
        - http :8003/find-all-greetings
        - http :8003/find-all-greetings/max
        #
        - http :8004/actuator/info
        - http :8004/info
        - http :8004/find-all-hello
        - http :8004/find-all-greetings
        - http :8004/find-all-greetings/maksimko
      after_script:
        - ./mvnw -f docker-compose -Pstop
    - stage: test
      name: local
      before_script:
        - ./mvnw
        - bash frontend/target/*.jar &
        - bash greeting-service/target/*.jar &
        - bash hello-variants-service/target/*.jar &
        - wait_for 8001 8002 8003 8004
      script:
        - http :8001/actuator/info
        - http :8001/info
        - http :8001/find-all-hello
        #
        - http :8003/actuator/info
        - http :8003/info
        - http :8003/find-all-greetings
        - http :8003/find-all-greetings/max
        #
        - http :8004/actuator/info
        - http :8004/info
        - http :8004/find-all-hello
        - http :8004/find-all-greetings
        - http :8004/find-all-greetings/maksimko
      after_script:
        - for n in 1 3 4 ; do http post :800$n/actuator/shutdown ; done
cache:
  pip: true
  packages: true
  directories:
    - ~/.m2
    - ~/.docker
    - ~/.local
