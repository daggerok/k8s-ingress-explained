<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <developers>
        <developer>
            <name>Maksim Kostromin</name>
            <email>daggerok@gmail.com</email>
            <organization>Sets of open source Maksim Kostromin aka daggerok projects</organization>
            <organizationUrl>https://github.com/daggerok/</organizationUrl>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>MIT License</name>
            <url>https://github.com/daggerok/k8s-nginx-ingress-example/blob/master/LICENSE</url>
        </license>
    </licenses>

    <organization>
        <name>Maksim Kostromin aka daggerok open source projects sets</name>
        <url>https://github.com/daggerok/</url>
    </organization>

    <scm>
        <developerConnection>scm:git:git@github.com:daggerok/k8s-nginx-ingress-example.git</developerConnection>
        <connection>scm:git:https://github.com/daggerok/k8s-nginx-ingress-example.git</connection>
        <url>https://github.com/daggerok/k8s-nginx-ingress-example</url>
        <tag>0.0.3</tag>
    </scm>

    <modelVersion>4.0.0</modelVersion>
    <name>${project.artifactId}</name>
    <groupId>com.example.k8snginxingressexample</groupId>
    <artifactId>k8s-nginx-ingress-example</artifactId>
    <version>0.0.3</version>
    <packaging>pom</packaging>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <encoding>UTF-8</encoding>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>

        <h2.version>1.4.199</h2.version>
        <vavr.version>0.10.2</vavr.version>
        <r2dbc.version>0.8.0.RC2</r2dbc.version>
        <Semantic-UI.version>2.4.1</Semantic-UI.version>
        <spring-boot.version>2.2.1.RELEASE</spring-boot.version>
        <jib-maven-plugin.version>1.7.0</jib-maven-plugin.version>
        <spring-data-r2dbc.version>0.1.0.M2</spring-data-r2dbc.version>
        <docker-maven-plugin.version>0.31.0</docker-maven-plugin.version>
        <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
        <docker-compose-maven-plugin.version>2.5.1</docker-compose-maven-plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot.experimental</groupId>
                <artifactId>spring-boot-bom-r2dbc</artifactId>
                <version>${spring-data-r2dbc.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>io.r2dbc</groupId>
                <artifactId>r2dbc-h2</artifactId>
                <version>${r2dbc.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>io.vavr</groupId>
                <artifactId>vavr</artifactId>
                <version>${vavr.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>Semantic-UI</artifactId>
                <version>${Semantic-UI.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>runtime</scope>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.example.k8snginxingressexample.shared</groupId>
                <artifactId>info</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.example.k8snginxingressexample.shared</groupId>
                <artifactId>hello-props</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
            <dependency>
                <groupId>com.example.k8snginxingressexample.shared</groupId>
                <artifactId>greeting-props</artifactId>
                <version>${project.version}</version>
                <type>jar</type>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot.experimental</groupId>
            <artifactId>spring-boot-test-autoconfigure-r2dbc</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>dev</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-devtools</artifactId>
                    <scope>runtime</scope>
                    <optional>true</optional>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <defaultGoal>package jib:dockerBuild</defaultGoal>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                    <executions>
                        <execution>
                            <id>build-info</id>
                            <phase>process-resources</phase>
                            <goals><goal>build-info</goal></goals>
                        </execution>
                        <execution>
                            <id>repackage</id>
                            <phase>package</phase>
                            <goals><goal>repackage</goal></goals>
                        </execution>
                    </executions>
                    <configuration>
                        <executable>true</executable>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>com.google.cloud.tools</groupId>
                    <artifactId>jib-maven-plugin</artifactId>
                    <version>${jib-maven-plugin.version}</version>
                    <configuration>
                        <skip>true</skip>
                        <from>
                            <!--<image>gcr.io/distroless/java:debug</image>
                            <image>gcr.io/distroless/java:8</image>
                            <image>gcr.io/distroless/java:11-debug</image>-->
                            <image>gcr.io/distroless/java:11</image>
                        </from>
                        <allowInsecureRegistries>true</allowInsecureRegistries>
                        <container>
                            <creationTime>USE_CURRENT_TIMESTAMP</creationTime>
                        </container>
                        <to>
                            <image>daggerok/${project.parent.artifactId}-${project.artifactId}</image>
                            <tags>
                                <tag>${project.version}</tag>
                                <tag>latest</tag>
                            </tags>
                        </to>
                        <!--
                        <skip>true</skip>
                        <allowInsecureRegistries>true</allowInsecureRegistries>
                        <container>
                            <appRoot>/tmp</appRoot>
                            <useCurrentTimestamp>true</useCurrentTimestamp>
                            <entrypoint>
                                <shell>bash</shell>
                                <option>-c</option>
                                <arg>java -jar /tmp/classpath/*.jar</arg>
                            </entrypoint>
                            <args>
                                <arg>/bin/bash</arg>
                            </args>
                        </container>
                        <containerizingMode>packaged</containerizingMode>
                        <from>
                            <image>openjdk:11.0.5-jre-stretch</image>
                        </from>
                        <to>
                            <image>daggerok/${project.parent.artifactId}-${project.artifactId}</image>
                            <tags>
                                <tag>${project.version}</tag>
                                <tag>latest</tag>
                            </tags>
                        </to>
                        -->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${maven-release-plugin.version}</version>
                    <configuration>
                        <arguments>-DskipTests</arguments>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <generateReleasePoms>false</generateReleasePoms>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <tagNameFormat>@{project.version}</tagNameFormat>
                        <preparationGoals>clean</preparationGoals>
                        <completionGoals>clean</completionGoals>
                        <goals>install</goals><!-- just don't deploy... -->
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
        </repository>
    </repositories>

    <modules>
        <module>shared</module>
        <module>docker-compose</module>
        <module>hello-variants-service</module>
        <module>greeting-service</module>
        <module>frontend</module>
    </modules>

</project>
